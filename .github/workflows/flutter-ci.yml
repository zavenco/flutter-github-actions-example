name: Flutter CI/CD

on:
  push:
    branches:
      - master
      - 'release/**'
      - develop

env:
  FLUTTER_CHANNEL: 'stable'
  FLUTTER_VERSION: '2.8.1'
  JAVA_VERSION: '17.0.1+12'
  RUBY_VERSION: '3.0.2'
  BUNDLER_VERSION: '2.3.0'
  FIREBASE_INSTALL_DIR: '/usr/local/bin'
  FIREBASE_VERSION: 'v10.0.1'

jobs:
  build_android_development:
    name: Build Android Alpha
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      - run: flutter build apk -t lib/main_development.dart --debug --flavor development --build-number=${{ github.run_number }} --dart-define=DEFINE_API_BASE_URL=${{ secrets.CI_TEST_API_URL_DEVELOPMENT }}
      - uses: actions/upload-artifact@v2
        with:
          name: android-alpha
          path: build/app/outputs/flutter-apk/app-development-debug.apk
          retention-days: 1
  build_ios_development:
    name: Build iOS Alpha
    runs-on: macos-11
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      - run: flutter build ios -t lib/main_development.dart --release --flavor development --no-codesign --build-number=${{ github.run_number }} --dart-define=DEFINE_API_BASE_URL=${{ secrets.CI_TEST_API_URL_DEVELOPMENT }}
      - run: gem install bundler -v ${{ env.BUNDLER_VERSION }}
      - run: bundle install
      - run: bundle exec fastlane build_ios_alpha
      - uses: actions/upload-artifact@v2
        with:
          name: ios-alpha
          path: ios/Flutter CI Test Alpha.ipa
          retention-days: 1
  build_android_staging:
    name: Build Android Beta
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, refs/heads/release)
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      - run: echo $UPLOAD_KEYSTORE_FILE | base64 -di > ./android/app/upload-key.jks
      - run: flutter build apk -t lib/main_staging.dart --release --flavor staging --build-number=${{ github.run_number }} --dart-define=DEFINE_API_BASE_URL=${{ secrets.CI_TEST_API_URL_STAGING }}
      - uses: actions/upload-artifact@v2
        with:
          name: android-beta
          path: build/app/outputs/flutter-apk/app-staging-release.apk
          retention-days: 1
  build_ios_staging:
    name: Build iOS Beta
    runs-on: macos-11
    if: startsWith(github.ref, refs/heads/release)
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      - run: flutter build ios -t lib/main_staging.dart --release --flavor staging --no-codesign --build-number=${{ github.run_number }} --dart-define=DEFINE_API_BASE_URL=${{ secrets.CI_TEST_API_URL_STAGING }}
      - run: gem install bundler -v ${{ env.BUNDLER_VERSION }}
      - run: bundle install
      - run: bundle exec fastlane build_ios_beta
      - uses: actions/upload-artifact@v2
        with:
          name: ios-beta
          path: ios/Flutter CI Test Beta.ipa
          retention-days: 1
  build_android_production:
    name: Build Android Production
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      - run: echo $UPLOAD_KEYSTORE_FILE | base64 -di > ./android/app/upload-key.jks
      - run: flutter build appbundle -t lib/main_production.dart --release --flavor production --build-number=${{ github.run_number }} --dart-define=DEFINE_API_BASE_URL=${{ secrets.CI_TEST_API_URL_PRODUCTION }}
      - uses: actions/upload-artifact@v2
        with:
          name: android-production
          path: build/app/outputs/bundle/productionRelease/app-production-release.aab
          retention-days: 1
  build_ios_production:
    name: Build iOS Production
    runs-on: macos-11
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      - run: flutter build ios -t lib/main_production.dart --release --flavor production --no-codesign --build-number=${{ github.run_number }} --dart-define=DEFINE_API_BASE_URL=${{ secrets.CI_TEST_API_URL_PRODUCTION }}
      - run: gem install bundler -v ${{ env.BUNDLER_VERSION }}
      - run: bundle install
      - run: bundle exec fastlane build_ios_production
      - uses: actions/upload-artifact@v2
        with:
          name: ios-production
          path: ios/Flutter CI Test.ipa
          retention-days: 1
  deploy_android_development:
    name: Deploy Android Alpha
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/develop'
    needs: build_android_development
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - run: sudo mkdir -p ${{ env.FIREBASE_INSTALL_DIR }}
      - run: sudo curl -o ${{ env.FIREBASE_INSTALL_DIR }} -L --progress-bar https://firebase.tools/bin/linux/${{ env.FIREBASE_VERSION }}
      - run: sudo chmod +rx ${{ env.FIREBASE_INSTALL_DIR }}/firebase
      - uses: actions/download-artifact@v2
        with:
          name: android-alpha
          path: build/app/outputs/flutter-apk/app-development-debug.apk
      - run: | 
          export GOOGLE_APPLICATION_CREDENTIALS=${{ secrets.CI_TEST_FIREBASE_SERVICE_ACCOUNT_DEVELOPMENT }}
          export CI_TEST_ANDROID_FIREBASE_APP_ID_DEVELOPMENT=${{ secrets.CI_TEST_ANDROID_FIREBASE_APP_ID_DEVELOPMENT }}
          cd android
          gem install bundler -v "$BUNDLER_VERSION"
          bundle install
          bundle exec fastlane deploy_android_alpha
  deploy_ios_development:
    name: Deploy iOS Alpha
    runs-on: macos-11
    if: github.ref == 'refs/heads/develop'
    needs: build_ios_development
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - run: sudo mkdir -p ${{ env.FIREBASE_INSTALL_DIR }}
      - run: sudo curl -o ${{ env.FIREBASE_INSTALL_DIR }} -L --progress-bar https://firebase.tools/bin/macos/${{ env.FIREBASE_VERSION }}
      - run: sudo chmod +rx ${{ env.FIREBASE_INSTALL_DIR }}/firebase
      - uses: actions/download-artifact@v2
        with:
          name: ios-alpha
          path: ios/Flutter CI Test Alpha.ipa
      - run: | 
          export GOOGLE_APPLICATION_CREDENTIALS=${{ secrets.CI_TEST_FIREBASE_SERVICE_ACCOUNT_DEVELOPMENT }}
          export CI_TEST_IOS_FIREBASE_APP_ID_DEVELOPMENT=${{ secrets.CI_TEST_IOS_FIREBASE_APP_ID_DEVELOPMENT }}
          export MATCH_PASSWORD=${{ secrets.MATCH_PASSWORD }}
          cd ios
          gem install bundler -v "$BUNDLER_VERSION"
          bundle install
          bundle exec fastlane deploy_ios_alpha