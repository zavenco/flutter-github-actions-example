name: Build & Deploy Android Production

on:
  push:
    branches:
      - master

env:
  FLUTTER_CHANNEL: 'stable'
  FLUTTER_VERSION: '2.8.1'
  JAVA_VERSION: '17.0.1+12'
  RUBY_VERSION: '3.0.3'
  BUNDLER_VERSION: '2.3.0'

jobs:
  build_android_production:
    name: Build Android Production
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Build app
        env: 
          UPLOAD_KEYSTORE_FILE: ${{ secrets.UPLOAD_KEYSTORE_FILE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        run: |
          echo $UPLOAD_KEYSTORE_FILE | base64 -di > ./android/app/upload-key.jks
          flutter build appbundle -t lib/main_production.dart --release --flavor production --build-number=${{ github.run_number }} --dart-define=DEFINE_API_BASE_URL=${{ secrets.CI_TEST_API_URL_PRODUCTION }}
      - uses: actions/upload-artifact@v2
        with:
          name: android-production
          path: build/app/outputs/bundle/productionRelease/app-production-release.aab
          retention-days: 1
  deploy_android_production:
    name: Deploy Android Production
    runs-on: ubuntu-20.04
    needs: build_android_production
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/download-artifact@v2
        with:
          name: android-production
          path: build/app/outputs/bundle/productionRelease
      - run: stat build/app/outputs/bundle/productionRelease/app-production-release.aab
      - name: Deploy app
        env:
          CI_TEST_GOOGLE_DEVELOPER_SERVICE_ACCOUNT_ACTOR_FASTLANE: ${{ secrets.CI_TEST_GOOGLE_DEVELOPER_SERVICE_ACCOUNT_ACTOR_FASTLANE }}
        run: | 
          cd android
          gem install bundler -v ${{ env.BUNDLER_VERSION }}
          bundle install
          bundle exec fastlane deploy_android_production